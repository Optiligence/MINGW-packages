_realname=qt5-multimedia${_namesuff}
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
_qtver=5.14.0
pkgver=${_qtver/-/}
pkgrel=1
arch=('x86_64')
url='https://www.qt.io'
license=('GPL3' 'LGPL3' 'FDL' 'custom')
pkgdesc='A cross-platform application and UI framework'
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs" "${MINGW_PACKAGE_PREFIX}-qtbinpatcher" "${MINGW_PACKAGE_PREFIX}-z3"
  "${MINGW_PACKAGE_PREFIX}-assimp"
  "${MINGW_PACKAGE_PREFIX}-double-conversion"
  "${MINGW_PACKAGE_PREFIX}-dbus"
  "${MINGW_PACKAGE_PREFIX}-fontconfig"
  "${MINGW_PACKAGE_PREFIX}-freetype"
  "${MINGW_PACKAGE_PREFIX}-harfbuzz"
  "${MINGW_PACKAGE_PREFIX}-jasper"
  "${MINGW_PACKAGE_PREFIX}-libjpeg"
  "${MINGW_PACKAGE_PREFIX}-libmng"
  "${MINGW_PACKAGE_PREFIX}-libpng"
  "${MINGW_PACKAGE_PREFIX}-libtiff"
  "${MINGW_PACKAGE_PREFIX}-libxml2"
  "${MINGW_PACKAGE_PREFIX}-libxslt"
  "${MINGW_PACKAGE_PREFIX}-libwebp"
  "${MINGW_PACKAGE_PREFIX}-openssl"
  "${MINGW_PACKAGE_PREFIX}-openal"
  "${MINGW_PACKAGE_PREFIX}-pcre2"
  "${MINGW_PACKAGE_PREFIX}-sqlite3"
  "${MINGW_PACKAGE_PREFIX}-vulkan"
  "${MINGW_PACKAGE_PREFIX}-xpm-nox"
  "${MINGW_PACKAGE_PREFIX}-zlib"
  "${MINGW_PACKAGE_PREFIX}-icu"
  "${MINGW_PACKAGE_PREFIX}-icu-debug-libs"
)
optdepends=("${MINGW_PACKAGE_PREFIX}-clang"
  "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
  "${MINGW_PACKAGE_PREFIX}-firebird2"
  "${MINGW_PACKAGE_PREFIX}-postgresql"
)
makedepends=("bison"
  "diffutils"
  "flex"
  "gperf"
  "m4"
  "make"
  "patch"
  "perl"
  "${MINGW_PACKAGE_PREFIX}-gcc"
  "${MINGW_PACKAGE_PREFIX}-clang"
  "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "${MINGW_PACKAGE_PREFIX}-python2"
  "${MINGW_PACKAGE_PREFIX}-ruby"
  "${MINGW_PACKAGE_PREFIX}-make"
  "${MINGW_PACKAGE_PREFIX}-ninja"
  "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
  "${MINGW_PACKAGE_PREFIX}-firebird2"
  "${MINGW_PACKAGE_PREFIX}-postgresql"
)
#depends=('libjpeg-turbo' 'xcb-util-keysyms' 'xcb-util-renderutil' 'libgl' 'fontconfig' 'xdg-utils'
#         'shared-mime-info' 'xcb-util-wm' 'libxrender' 'libxi' 'sqlite' 'xcb-util-image' 'mesa'
#         'tslib' 'libinput' 'libxkbcommon-x11' 'libproxy' 'libcups' 'double-conversion' 'md4c')
#makedepends=('libfbclient' 'mariadb-libs' 'sqlite' 'unixodbc' 'postgresql-libs' 'alsa-lib' 'gst-plugins-base-libs'
#             'gtk3' 'libpulse' 'cups' 'freetds' 'vulkan-headers')
#optdepends=('qt5-svg: to use SVG icon themes'
#            'qt5-wayland: to run Qt applications in a Wayland session'
#            'qt5-translations: for some native UI translations'
#            'postgresql-libs: PostgreSQL driver'
#            'mariadb-libs: MariaDB driver'
#            'unixodbc: ODBC driver'
#            'libfbclient: Firebird/iBase driver'
#            'freetds: MS SQL driver'
#            'gtk3: GTK platform plugin')
#groups=('qt' 'qt5')
options=('!strip' 'staticlibs' 'ccache')
_pkgfqn="qtmultimedia-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/submodules/${_pkgfqn}.tar.xz")
sha256sums=('e7901aa32fe71f1409cf73a0c62f27b98f434688e7b16ea8591b29cd8f90ad5e')

# qt5-static must be kept in its own prefix hierarchy
# as otherwise it will conflict with qt5 itself
if [ "${_variant}" = "-static" ]; then
  _qt5_prefix="${MINGW_PREFIX}/${_realname}"
else
  _qt5_prefix="${MINGW_PREFIX}"
fi

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp2 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  mkdir -p build
}

build() {
  cd build

  qmake ../${_pkgfqn}
  make
}

package() {
  cd build
  make INSTALL_ROOT="${pkgdir:2}" install
  mv $pkgdir/msys64/mingw64 $pkgdir/mingw64
  rmdir $pkgdir/msys64

  # # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  # find "$pkgdir/usr/lib" -type f -name '*.prl' \
  #   -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # install -d "$pkgdir"/usr/share/licenses
  # ln -s /usr/share/licenses/qt5-base "$pkgdir"/usr/share/licenses/${pkgname}
}
