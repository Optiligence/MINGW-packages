pkgbase="mingw-w64-qt5"
pkgname=("${MINGW_PACKAGE_PREFIX}-qt5-base-static")
#pkgname=("${MINGW_PACKAGE_PREFIX}-qt5-base" "${MINGW_PACKAGE_PREFIX}-qt5" "${MINGW_PACKAGE_PREFIX}-qt5-debug)
_qtver=5.14.1
pkgver=${_qtver/-/}
pkgrel=2
arch=('x86_64')
url='https://www.qt.io'
license=('GPL3' 'LGPL3' 'FDL' 'custom')
pkgdesc='A cross-platform application and UI framework'
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs" "${MINGW_PACKAGE_PREFIX}-qtbinpatcher" "${MINGW_PACKAGE_PREFIX}-z3"
  "${MINGW_PACKAGE_PREFIX}-assimp"
  "${MINGW_PACKAGE_PREFIX}-double-conversion"
  "${MINGW_PACKAGE_PREFIX}-dbus"
  "${MINGW_PACKAGE_PREFIX}-fontconfig"
  "${MINGW_PACKAGE_PREFIX}-freetype"
  "${MINGW_PACKAGE_PREFIX}-harfbuzz"
  "${MINGW_PACKAGE_PREFIX}-jasper"
  "${MINGW_PACKAGE_PREFIX}-libjpeg"
  "${MINGW_PACKAGE_PREFIX}-libmng"
  "${MINGW_PACKAGE_PREFIX}-libpng"
  "${MINGW_PACKAGE_PREFIX}-libtiff"
  "${MINGW_PACKAGE_PREFIX}-libxml2"
  "${MINGW_PACKAGE_PREFIX}-libxslt"
  "${MINGW_PACKAGE_PREFIX}-libwebp"
  "${MINGW_PACKAGE_PREFIX}-openssl"
  "${MINGW_PACKAGE_PREFIX}-openal"
  "${MINGW_PACKAGE_PREFIX}-pcre2"
  "${MINGW_PACKAGE_PREFIX}-sqlite3"
  "${MINGW_PACKAGE_PREFIX}-vulkan"
  "${MINGW_PACKAGE_PREFIX}-xpm-nox"
  "${MINGW_PACKAGE_PREFIX}-zlib"
  "${MINGW_PACKAGE_PREFIX}-icu"
  "${MINGW_PACKAGE_PREFIX}-icu-debug-libs"
)
optdepends=("${MINGW_PACKAGE_PREFIX}-clang"
  "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
  "${MINGW_PACKAGE_PREFIX}-firebird2"
  "${MINGW_PACKAGE_PREFIX}-postgresql"
)
makedepends=("bison"
  "diffutils"
  "flex"
  "gperf"
  "m4"
  "make"
  "patch"
  "perl"
  "${MINGW_PACKAGE_PREFIX}-gcc"
  "${MINGW_PACKAGE_PREFIX}-clang"
  "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "${MINGW_PACKAGE_PREFIX}-python"
  "${MINGW_PACKAGE_PREFIX}-ruby"
  "${MINGW_PACKAGE_PREFIX}-make"
  "${MINGW_PACKAGE_PREFIX}-ninja"
  "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
  "${MINGW_PACKAGE_PREFIX}-firebird2"
  "${MINGW_PACKAGE_PREFIX}-postgresql"
)
#depends=('libjpeg-turbo' 'xcb-util-keysyms' 'xcb-util-renderutil' 'libgl' 'fontconfig' 'xdg-utils'
#         'shared-mime-info' 'xcb-util-wm' 'libxrender' 'libxi' 'sqlite' 'xcb-util-image' 'mesa'
#         'tslib' 'libinput' 'libxkbcommon-x11' 'libproxy' 'libcups' 'double-conversion' 'md4c')
#makedepends=('libfbclient' 'mariadb-libs' 'sqlite' 'unixodbc' 'postgresql-libs' 'alsa-lib' 'gst-plugins-base-libs'
#             'gtk3' 'libpulse' 'cups' 'freetds' 'vulkan-headers')
#optdepends=('qt5-svg: to use SVG icon themes'
#            'qt5-wayland: to run Qt applications in a Wayland session'
#            'qt5-translations: for some native UI translations'
#            'postgresql-libs: PostgreSQL driver'
#            'mariadb-libs: MariaDB driver'
#            'unixodbc: ODBC driver'
#            'libfbclient: Firebird/iBase driver'
#            'freetds: MS SQL driver'
#            'gtk3: GTK platform plugin')
#groups=('qt' 'qt5')
options=('!strip' 'staticlibs' 'ccache')
_pkgfqn="qtbase-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/submodules/${_pkgfqn}.tar.xz"
        0000-adjust-qmake-conf-mingw.patch
        0001-qt-5.8.0-fix-sql-libraries-mingw.patch
        0002-qt-5.8.0-configure-gcc-before-clang.patch
        0004-fix-linking-again-different-static-libs.patch
        0006-qt-5.3.0-win_flex-replace.patch
        0007-qt-5.3.0-win32-g-Enable-static-builds.patch
        0008-qt-5.3.0-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
        0011-qt-5.8.0-mingw-dbus-and-pkg-config.patch
        0016-qt-5.8.0-win32-g++-use-qpa-genericunixfontdatabase.patch
        0025-qt-5.8.0-force-using-make-on-msys.patch
        0028-qt-5.8.0-Revert-untangle-use-of-system-vs.-shell-path-list-se.patch
        0029-qt-5.8.0-Revert-fix-quoting-and-path-separators-in-qtPrepareT.patch
        0030-qt-5.3.1-workaround-ansidecl-h-PTR-define-conflict.patch
        0035-qt-5.3.2-dont-add-resource-files-to-qmake-libs.patch
        0036-qt-5.3.2-win32-qt5-static-cmake-link-ws2_32-and--static.patch
        0041-qt-5.4.0-Fix-mingw-create_cmake-prl-file-has-no-lib-prefix.patch
        0044-qt-5.13-static-cmake-fix-default-libs.patch
        0046-qt-5.4.1-Revert-Revert-fix-NTFS-mount-points.patch
        0048-qt-5.4.2-win32-Avoid-platformNativeInterface-segfaults-with-minimal-platform.patch
        0049-qt-5.8.0-win32-do-not-use-fontconfig.patch
        0054-win32-dont-need-flatpack-theme.patch
        0056-qt-5.11-static_icu.patch
        0057-fix-and-enable-iconv-codec.patch
        0300-qt-5.8.0-cast-errors.patch)
sha256sums=('d9d423a6e7bcf1055c0372fc029f14a6fe67dd62c67b83095cde68b60b762cf7'
            'fabc14c5e854a17f1fdfb6575e0950b1f6e8b0f4ee36cca0c017994b4070ecac'
            '617e6fa85a92353d0073425d37cd5d90d92cb7f906d66dd2d0df576122d091a4'
            '27ce2161b5dbea2fcce6b15948ab722a71036d056420854f6554969f683583bb'
            'e04033364f5ad77906b4100c34572df57bd793a55bc33b7d8a753a2cc60af259'
            '18fd2fa42215ac47b3b314261ab98cbe65f8231429e4f29a152288a3ca93daf1'
            '4e154fbc9059a096c351d019da6b18c907b1d8b06e028f48c7365f62bcd0edc9'
            'f763a03ab2b4eaecf88d85ba9ba77681cffd3a99f2d02f4cc9963f3905243460'
            '465d3897c4494695b66ac121944b3bd370db91bfea71dd2c9170dbf268cc99ea'
            '678c185795a41c7f38822120030585a0427287f3a1c2df9616daaa89f3285df3'
            '97fcd6bd58ff8b8d735a6381b607bb3b4b351d1d07be1bbc18b97155dcbb501d'
            '5c437c611d2d19b834b2ba3301e270bf16e6bc6e6fe6470f8066a443ffcad152'
            '19566c38bd50581acaa6a9f46f0e25c41fdfc8b0b42269126e4d3a9b83e2f224'
            'ddaa067d144f5788ab7a3ed0dfc426d702c13de9c35f04eaaf38d642be4934d4'
            '8beeb610df3aff14bae43c56e5781cda3d49f1ad23c6e3fc2aa2405ce002de46'
            '6595c9a5dbbdcea44f1c085c25a186b15ca4a732b28d1894a11141ddd472250d'
            '14b88305c02f8471d5b01a2c9d2385fbeee78f5084a6d0da53246623243ebffd'
            '6e9fa42f26625fd7c8d4ce180b5ec9a0b640501eb976da50a49d6a376019cc0e'
            '2816d297d783c00744d6cf94758da1cb59dfd1061deceb82744e607b8292e324'
            '42724bd154ed98c612d19a7daee2b5028270ef6dbfe7f35d5f97c8d0605f9fe6'
            '3dc4d7c4fed8fedd726211edbfe13f4d78247d3ab2f789f3ce2a8e43e59a7c5b'
            '00e32052ac1a9a8391275dfe69901d4ae146ac1441c00bf46f3ef1cfe459a78d'
            '8a74fab12c9d3faac81d75ea1c0662624b83059631db8d9f2570b414d62dc692'
            'b878680172290ad2dcb5508827ef5a9230cbfd8e97d2672d2e96b5addbd55833'
            '9ea7aeb486023f3aebf1af44603ebd9266009aaeaf91e52c37c8c5154ea3900c')

# prepare() {
#   cd ${_pkgfqn}

#   # Build qmake using Arch {C,LD}FLAGS
#   # This also sets default {C,CXX,LD}FLAGS for projects built using qmake
#   sed -i -e "s|^\(QMAKE_CFLAGS_RELEASE.*\)|\1 ${CFLAGS}|" \
#     mkspecs/common/gcc-base.conf
#   sed -i -e "s|^\(QMAKE_LFLAGS_RELEASE.*\)|\1 ${LDFLAGS}|" \
#     mkspecs/common/g++-unix.conf
# }

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp2 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd ${_pkgfqn}
  apply_patch_with_msg \
    0000-adjust-qmake-conf-mingw.patch \
    0001-qt-5.8.0-fix-sql-libraries-mingw.patch \
    0002-qt-5.8.0-configure-gcc-before-clang.patch \
    0004-fix-linking-again-different-static-libs.patch \
    0006-qt-5.3.0-win_flex-replace.patch \
    0007-qt-5.3.0-win32-g-Enable-static-builds.patch \
    0008-qt-5.3.0-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch \
    0011-qt-5.8.0-mingw-dbus-and-pkg-config.patch \
    0016-qt-5.8.0-win32-g++-use-qpa-genericunixfontdatabase.patch

  # patch -p1 -i ${srcdir}/0024-qt-5.3.0-icu-add-U_LIB_SUFFIX_C_NAME.patch
  if [ "${_make}" = "make" ]; then
    apply_patch_with_msg \
      0025-qt-5.8.0-force-using-make-on-msys.patch
  fi

  # Ossi says we should fix this in qwebkit with a $$(shell_path), but the ' quotes get in the way
  # due to qtPrepareTool adding them with $$shell_quote
  apply_patch_with_msg \
    0028-qt-5.8.0-Revert-untangle-use-of-system-vs.-shell-path-list-se.patch \
    0029-qt-5.8.0-Revert-fix-quoting-and-path-separators-in-qtPrepareT.patch \
    0030-qt-5.3.1-workaround-ansidecl-h-PTR-define-conflict.patch \
    0035-qt-5.3.2-dont-add-resource-files-to-qmake-libs.patch

  # More odds and sods.
  # patch -p1 -i ${srcdir}/0044-qt-5.4.0-win32-g++-enable-qtwebengine-build.patch

  # Patches so that qt5-static can be used with cmake.
  apply_patch_with_msg \
    0036-qt-5.3.2-win32-qt5-static-cmake-link-ws2_32-and--static.patch \
    0041-qt-5.4.0-Fix-mingw-create_cmake-prl-file-has-no-lib-prefix.patch \
    0044-qt-5.13-static-cmake-fix-default-libs.patch

  apply_patch_with_msg \
    0046-qt-5.4.1-Revert-Revert-fix-NTFS-mount-points.patch

  apply_patch_with_msg \
    0048-qt-5.4.2-win32-Avoid-platformNativeInterface-segfaults-with-minimal-platform.patch \
    0049-qt-5.8.0-win32-do-not-use-fontconfig.patch \
    0054-win32-dont-need-flatpack-theme.patch \
    0056-qt-5.11-static_icu.patch \
    0057-fix-and-enable-iconv-codec.patch \
    0300-qt-5.8.0-cast-errors.patch

  echo '#include "../../../../src/platformsupport/eventdispatchers/qwindowsguieventdispatcher_p.h"' > include/QtEventDispatcherSupport/${_qtver}/QtEventDispatcherSupport/private/qwindowsguieventdispatcher_p.h
  echo '#include "../../../../src/platformsupport/fontdatabases/freetype/qfreetypefontdatabase_p.h"' > include/QtFontDatabaseSupport/${_qtver}/QtFontDatabaseSupport/private/qfreetypefontdatabase_p.h
  echo '#include "../../../../src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase_p.h"' > include/QtFontDatabaseSupport/${_qtver}/QtFontDatabaseSupport/private/qfontconfigdatabase_p.h
  echo '#include "../../../../src/platformsupport/fontdatabases/windows/qwindowsfontdatabase_p.h"' > include/QtFontDatabaseSupport/${_qtver}/QtFontDatabaseSupport/private/qwindowsfontdatabase_p.h
  echo '#include "../../../../src/platformsupport/fontdatabases/windows/qwindowsfontdatabase_ft_p.h"' > include/QtFontDatabaseSupport/${_qtver}/QtFontDatabaseSupport/private/qwindowsfontdatabase_ft_p.h
  echo '#include "../../../../src/platformsupport/windowsuiautomation/qwindowsuiawrapper_p.h"' > include/QtWindowsUIAutomationSupport/${_qtver}/QtWindowsUIAutomationSupport/private/qwindowsuiawrapper_p.h
}

build() {
  echo hi
}

package_qt5-base-static() {
  cd ${_pkgfqn}
  _qt5_prefix="${MINGW_PREFIX}/qt5-static"
  local _buildpkgdir=${pkgdirbase}/${pkgname}/${_qt5_prefix}
  mkdir -vp ${_buildpkgdir}
  local QTDIR_WIN=$(cygpath -am ${_buildpkgdir})

  export VULKAN_SDK=${MINGW_PREFIX}

  rm -f config.cache # dbus shared vs static

  ./configure -confirm-license -opensource \
    -prefix ${QTDIR_WIN} \
    -datadir ${QTDIR_WIN}/share/qt5 \
    -archdatadir ${QTDIR_WIN}/share/qt5 \
    -examplesdir ${QTDIR_WIN}/share/qt5/examples \
    -testsdir ${QTDIR_WIN}/share/qt5/tests \
    -opengl desktop \
    -optimized-qmake \
    -platform win32-g++ \
    -debug-and-release \
    -static \
    -make libs \
    -no-icu \
    -qt-freetype

    #-D JAS_DLL=0 \
    #-no-dbus
    #-openssl-linked \
#    -no-fontconfig \
    #-dbus-linked \
    #-qt-zlib \ # broken

    #-no-jasper \
    #-no-mng \
    #-qt-tiff \
    #-qt-webp \
    #-qt-assimp \
    #-no-gstreamer \

  make

  depends=("$MINGW_PACKAGE_PREFIX-gcc-libs"
    "${MINGW_PACKAGE_PREFIX}-qtbinpatcher"
    "${MINGW_PACKAGE_PREFIX}-z3"
  )
  makedepends=("bison"
    "diffutils"
    "flex"
    "gperf"
    "m4"
    "make"
    "patch"
    "perl"
    "${MINGW_PACKAGE_PREFIX}-gcc"
    "${MINGW_PACKAGE_PREFIX}-clang"
    "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
    "${MINGW_PACKAGE_PREFIX}-pkg-config"
    "${MINGW_PACKAGE_PREFIX}-python2"
    "${MINGW_PACKAGE_PREFIX}-ruby"
    "${MINGW_PACKAGE_PREFIX}-make"
    "${MINGW_PACKAGE_PREFIX}-ninja"
    "${MINGW_PACKAGE_PREFIX}-dbus"
    "${MINGW_PACKAGE_PREFIX}-openssl"
  )
  pkgdesc='A cross-platform application and UI framework'
  conflicts=("${MINGW_PACKAGE_PREFIX}-qt5-static")
  provides=("${MINGW_PACKAGE_PREFIX}-qt5-static")

  #cd ${_pkgfqn}
  #make INSTALL_ROOT="${pkgdir}" install
  make install
}

package_qt5-base() {
  cd ${_pkgfqn}
  _qt5_prefix="${MINGW_PREFIX}"
  local _buildpkgdir=${pkgdirbase}/${pkgname}/${_qt5_prefix}
  mkdir -vp ${_buildpkgdir}
  local QTDIR_WIN=$(cygpath -am ${_buildpkgdir})

  ./configure -confirm-license -opensource \
    -prefix ${QTDIR_WIN} \
    -datadir ${QTDIR_WIN}/share/qt5 \
    -archdatadir ${QTDIR_WIN}/share/qt5 \
    -examplesdir ${QTDIR_WIN}/share/qt5/examples \
    -testsdir ${QTDIR_WIN}/share/qt5/tests \
    -release -force-debug-info -separate-debug-info \
    -opengl desktop \
    -optimized-qmake \
    -platform win32-g++ \
    -shared \
    -no-glib \
    -no-iconv \
    -dbus \
    -icu \
    -system-doubleconversion \
    -system-freetype \
    -system-harfbuzz \
    -I "${MINGW_PREFIX}/include/mariadb" \
    -nomake examples \
    -nomake tests

    #-plugin-sql-{ibase,psql,mysql,odbc} \

    #-docdir /usr/share/doc/qt \
    #-headerdir /usr/include/qt \
    #-sysconfdir /etc/xdg \
    # shared
    #-system-sqlite \
    #-openssl-linked \
    #-no-rpath \
    #-dbus-linked \
    #-system-harfbuzz \
    #-journald \
    #-no-mimetype-database \
    #-no-use-gold-linker \
    #-reduce-relocations
  make

  pkgdesc='A cross-platform application and UI framework'
  conflicts=("${MINGW_PACKAGE_PREFIX}-qt5")
  provides=("${MINGW_PACKAGE_PREFIX}-qt5")

  #cd ${_pkgfqn}
  #make INSTALL_ROOT="${pkgdir}" install
  make install

  install -Dm644 LICENSE* -t "$pkgdir"/$MINGW_PREFIX/share/licenses/$pkgbase

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  #find "${pkgdir}/lib" -type f -name '*.prl' \
  #  -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Fix wrong qmake path in pri file
  #sed -i "s|${srcdir}/${_pkgfqn}|/mingw64|" \
  #  "${pkgdir}"/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri

  # Symlinks for backwards compatibility
  #for b in "${pkgdir}"/usr/bin/*; do
  #  ln -s $(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  #done
}

package_mingw-w64-x86_64-qt5-base() {
  package_qt5-base
}

package_mingw-w64-x86_64-qt5-base-debug() {
  conflicts=("${MINGW_PACKAGE_PREFIX}-qt5-debug")
  cd ${_pkgfqn}
  install -Dm644 lib/*.debug -t "$pkgdir"/$MINGW_PREFIX/bin
}

package_mingw-w64-x86_64-qt5-base-static() {
  package_qt5-base-static
}

package_mingw-w64-i686-qt5-base() {
  package_qt5-base
}

package_mingw-w64-i686-qt5-base-debug() {
  package_qt5-base
}

package_mingw-w64-i686-qt5-base-static() {
  package_qt5-base
}
